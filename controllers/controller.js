var isodate = require("isodate");

//Log enter
if (global.debug) console.log("#### Inside of controller.js");

// Read the JSON files
var jsonMetadata = require("../data/metadades_municipis.json");
var jsonForecast = require("../data/prediccions_municipals.json");
var frames       = [];

//Return all the data
exports.getMetadata = function() {
	return jsonMetadata;
};

exports.getForecast = function() {
	return jsonForecast;
};

//Return a specific Id
exports.getMetadataId = function(id) {
    for (i = 0; i < jsonMetadata.length; i++) {
        if (jsonMetadata[i].codi === id) {
            return jsonMetadata[i];
        }
    }
    return -1;	
};

exports.getForecastId = function(id) {
    for (i = 0; i < jsonForecast.length; i++) {
        if (jsonForecast[i].codi === id) {
            return jsonForecast[i];
        }
    }
    return -1;	
};

//Return a specific Id & Date forecast
exports.getForecastIdDate = function(id, date) {
    
    //Get the current forecast
    var currForecast = controller.getForecastId(id);
    if(currForecast===-1) return -1;  

    //Get the array of days
    var dies = currForecast.dies;
    for (i = 0; i < dies.length; i++) {
        var currDate = isodate(dies[i].data);
        if (currDate.toString() === date.toString()) {
            return dies[i].variables;
        }
    }

    return -1;
};

//API REST
exports.metadades = function (req, res) {
    var metadata = controller.getMetadata();
    var idFrame = Math.floor((Math.random() * 10000000) + 1);
    frames.push(idFrame);
    if (metadata!==-1)
        res.render('municipis/metadades', {municipis: metadata, idFrame: idFrame, errors: []});
    else 
        res.render('municipis/metadades', {municipis: [], idFrame: idFrame, errors: []});
};

exports.municipi = function (req, res) {
    var forecast = controller.getForecastId(req.params.uid);
    if (global.debug) console.log("#### uid" + req.params.uid);

    if (forecast!==-1) {
        //Transform the dates
        var dates   = [];
        var dies = forecast.dies;
        for (i = 0; i < dies.length; i++) {
            var currDate = isodate(dies[i].data);
            var day = currDate.getDate().toString();
            var month = (1 + currDate.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;
            var year = currDate.getFullYear().toString();
            day = day.length > 1 ? day : '0' + day;
            dates.push(day + '/' + month + '/' + year);
        };

        res.render('municipis/index', {forecast: forecast, dates: dates, errors: []});
    }
    else 
        res.render('municipis/index', {forecast: [], dates: [], errors: []});
};

//Get autogenerated IDs
exports.getIDs = function () {
    return frames;
};

//Log enter
if (global.debug) console.log("#### Outside of controller.js");

